***********************************Get daily Risk Profiles*****************************/
/***********************************Parameter selections************************************/
//Portfolio
//Property Types
//Capital Structure 
//Investment Structure
//Current Risk Profile
//User

/******************************************************************************************/
//Benchmark info
//Benchmark Dates
%LET TRAILING_FIVE_YEAR = QUARTERENDDATE(%FIVE_YEARS+1);
%LET FOUR_YEARS_BEGIN = YEARBEGDATE(%FOUR_YEARS)-1;
%LET FOUR_YEARS_END = YEARENDDATE(%FOUR_YEARS);
%LET THREE_YEARS_END = YEARENDDATE(%THREE_YEARS);
%LET TWO_YEARS_END = YEARENDDATE(%TWO_YEARS);
%LET ONE_YEAR_END = YEARENDDATE(%ONE_YEAR);

/***********************Get a list of all quarters between end date and four years ago***/
%DEFINE QUARTER_END_FILTER;
%DEFINE REPORT_DATE;
%LET DATE = %ASOFDATE;
%DEFINE USE_FUNDINVESTORPOSITIONS;
%DEFINE USE_FUNDINVESTOROPERATIONS;
%DEFINE USE_INVESTOR_CURR;
%DEFINE FOF_INVESTOR_REPORT;
%LET IQID_FOF_FUND = %FUND

//%DEFINE DISPOSITION_FILTER;
//Pull in assets data
DATA WORK.T_ASSETS;
SET V_ASSETS;
COLUMN DISPOSITION_BEFORE TYPE = INTEGER;

/***************Make sure only one entry per entry date****************************/
SCENARIO_OPERATING_COMPANY;
SCENARIO_PED;
SCENARIO_PORTFOLIO;
SCENARIO_SINGLE_PROPERTY;

//Target Information
SCENARIO_STRATEGIC_ALLOCS_NEW
DATA T_TARGET_INFO 
SET V_SCENARIO_STRATEGIC_ALLOCS_NEW
V_SCENARIO_STRATEGIC_TARGETS

/***************************Asset Scenarios***************************************************/
ASSET_SCENARIOS
ASOFDATE_LOAN_TO_VALUE PHYSICAL_OCCUPANCY = ASOFDATE_PHYSICAL_OCCUPANCY VALUE = ASOFDATE_MATURITY_DATE
DIRECT_CAP_RATE = ASOFDATE_DIRECT_CAP_RATE NET_ASSET_VALUE = ASOFDATE_NET_ASSET_VALUE DISCOUNT_RATE = ASOFDATE_DISCOUNT_RATE SCENARIO_TYPE_NAME = ASOFDATE_SCENARIO_TYPE_NAME FUND_OWNERSHIP = ASOFDATE_FUND_OWNERSHIP))

WORK.T_ASSET_SCENARIOS(WHERE ENTRY_DATE = %PREVIOUS_QTR_END KEEP =
WORK.T_ASSET_SCENARIOS(WHERE ENTRY_DATE = %ONE_YEAR KEEP 
WORK.T_ASSET_SCENARIOS(WHERE ENTRY_DATE = %FOUR_YEARS KEEP

SCENARIO_TYPE
QUARTER_GAV_CHANGE = ASOFDATE_VALUE-PREVIOUS_QTR_END_VALUE;
IF ASOFDATE_SCENARIO_TYPE_NAME = "Operating Company" THEN
   IF PUBLIC_CO = "TRUE" THEN
   ELSE
      ASOFDATE_SCENARIO_TYPE_NAME = "Private Companies";
      ASOFDATE_SCENARIO_TYPE_NAME = "Preferred Equity/Debt" THEN
      ASOFDATE_SCENARIO_TYPE_NAME = INVESTMENT_STRUCTURE;

WORK.T_ASSETS
WHERE ASOFDATE_FUND_OWNERSHIP <> 1 AND DISPOSITION_BEFORE <> 1 AND ASOFDATE_VALUE >0) OUT = WORK.T_NON_100_PERCENT_OWNERSHIP;
IF PROPERTY_TYPE IN("Office","Apartment","Retail","Industrial","Various") THEN
   PROPERTY_TYPE_CLASS = PROPERTY_TYPE;
ELSE
   PROPERTY_TYPE_CLASS = "Specialty";

COLUMN SEASONED TYPE = STRING;
IF SWIB_SUBSCRIPTION_DATE <= YMD(YEAR(QUARTER_END_DATE)-3,MONTH(QUARTER_END_DATE),DAY(QUARTER_END_DATE)) THEN
   SEASONED = "Seasoned";
ELSE
   SEASONED = "Unseasoned";

DATA WORK.T_FUND_TRANSACTIONS;
V_SCENARIO_PARTNERSHIP_SUMMARY(KEEP = ENTRY_DATE FUND_IQID OVERALL_LEVERAGE_RATIO RENAME=(ENTRY_DATE=QUARTER_END_DATE));


/*****************************Page 18*********************/

//Debt Structure Translation table.   
//Portfolio Markets Transalation Table
//Fund Ownership for last five years
SCENARIO_PARTNERSHIP_SUMMARY
IF NET_ASSET_VALUE IS NOT NULL THEN
OWNERSHIP_PERCENTAGE = SWIB_ENDING_MARKET_VALUE_NAV2/NET_ASSET_VALUE;

WHERE ASOFDATE_SCENARIO_TYPE_NAME_ORIGINAL = "Preferred Equity/Debt" KEEP = ASSET INVESTMENT_STRUCTURE 
SWIB_GAV = ASOFDATE_VALUE*OWNERSHIP_PERCENTAGE;

DEBT_INVESTMENT_STRUCTURES_PERCENTAGE = SWIB_GAV/SWIB_GAV_SUM;


/****Leverage Ratio/Subordination Risk Ratio****/
VALUE = VALUE*OWNERSHIP_PERCENTAGE;
DEBT_SENIOR_IN_CC = DEBT_SENIOR_IN_CC*OWNERSHIP_PERCENTAGE;
NET_ASSET_VALUE = NET_ASSET_VALUE*OWNERSHIP_PERCENTAGE;
FINANCING_ON_OWED_POSITION = FINANCING_ON_OWED_POSITION*OWNERSHIP_PERCENTAGE;
LEVERAGE_RATIO = (GAV-NAV)/GAV;
EMBEDDED_LEVERAGE_RATIO = 1 - (NAV/(NAV+FINANCING_ON_OWED_POSITION+DEBT_SENIOR_IN_CC));

/****Market Exposure****/
WHERE MSA IS NOT NULL /* AND DISPOSITION_BEFORE <> 1*/) 
(RENAME=(ORIGINAL=MSA NEW = MSA_NEW));
GAV = GAV/GAV_TOTAL;


/************Top 10*********/
COMPLETION_DATE = ASSET_NAME INVESTMENT_STRUCTURE MSA VALUE CURRENT_LIFECYCLE PROPERTY_TYPE);
PERCENT_OF_TOTAL_GAV = VALUE/VALUE_SUM;
VALUE = VALUE/1000000;
BY DESCENDING VALUE;


/*******Property Type Exposure by GAV*****/
WHERE COMPLETION_DATE IN(%ASOFDATE,%ONE_YEAR,%TWO_YEARS,%THREE_YEARS,%FOUR_YEARS)) 
SUM VALUE(NAME = GAV);
PERCENTAGE_OF_TOTAL = GAV/GAV_SUM;
TYPE_EXPOSURE_GAV_18 OUT = 

PROPERTY_TYPE="Data Center";OUTPUT;
PROPERTY_TYPE="For-sale Residential";OUTPUT;
PROPERTY_TYPE="Infrastructure";OUTPUT;
PROPERTY_TYPE="Medical Facility";OUTPUT;
PROPERTY_TYPE="Self Storage";OUTPUT;
PROPERTY_TYPE="Senior Living";OUTPUT;
PROPERTY_TYPE="Student Housing";OUTPUT;
PROPERTY_TYPE="Entertainment / Leisure";OUTPUT;
PROPERTY_TYPE="Mixed Use";OUTPUT;
PROPERTY_TYPE="Timberland";OUTPUT;
PROPERTY_TYPE="Agriculture";OUTPUT;
PROPERTY_TYPE="";OUTPUT;

IF GAV_SUM IS NULL THEN
   PERCENTAGE_OF_TOTAL = 0;


/*******Lifecycle Exposure by GAV*****/

DATA WORK.PED_ASSET_DATA_LIFECYCLES;
ASSET_LIFECYCLES" 
BY CURRENT_LIFECYCLE;

LIFECYCLE_EXPOSURE_GAV_TOTALS;
BY COMPLETION_DATE;

/*****************************Page 7**********************/
SWIB_NAV = NET_ASSET_VALUE*OWNERSHIP_PERCENTAGE;
ORIGINAL_VALUE = VALUE;
VALUE = VALUE*OWNERSHIP_PERCENTAGE;
TRANSLATION_TYPE = "ASSET_TYPES" RENAME=(ORIGINAL=TRANS_MERGE NEW = ASSET_TYPE));
TRANSLATION_TYPE = "PROPERTY_TYPES" RENAME=(ORIGINAL=PROPERTY_TYPE NEW = PROPERTY_TYPE_NEW));
TRANSLATION_TYPE SORT WHERE (CURRENT_LIFECYCLE_NEW in ("Operating Companies") AND SCENARIO_TYPE_INT = 1) OR (CURRENT_LIFECYCLE_NEW <> "Operating Companies" AND (NOT(SCENARIO_TYPE_INT=1))));
MERGE WORK.ASSET_DATA(IN=IN1) WORK.T_TRANS_TABLE(WHERE TRANSLATION_TYPE = "ASSET_LIFECYCLES" RENAME=(ORIGINAL=CURRENT_LIFECYCLE NEW = CURRENT_LIFECYCLE_NEW));


//Asset level
ASSET_TYPE_DATA
BY COMPLETION_DATE_SERIAL = DATESERIAL(YEAR(COMPLETION_DATE),MONTH(COMPLETION_DATE),DAY(COMPLETION_DATE));
PERCENTAGE_OF_TOTAL = GAV/GAV_SUM;


//Fund level
FUND_TYPE
BY COMPLETION_DATE;


//Leverage ratio
LEVERAGE_RATIO_GAV = SWIB_ENDING_MARKET_VALUE_NAV2/(1-OVERALL_LEVERAGE_RATIO);
SUM DEBT_SENIOR_IN_CC_ORIGINAL(NAME = DEBT_SENIOR_IN_CC);

IF (TOTAL_GROSS_EXPOSURE+CASH_CASH_EQUIVALENTS+DEBT_SENIOR_IN_CC) <> 0 THEN
SUB_RR_PERCENTAGE = (TOTAL_FINANCE_BMTM+DEBT_SENIOR_IN_CC)/(TOTAL_GROSS_EXPOSURE+CASH_CASH_EQUIVALENTS+DEBT_SENIOR_IN_CC);

IF SUB_RR_PERCENTAGE <> 1 THEN
RR_GAV = SWIB_ENDING_MARKET_VALUE_NAV2/(1-SUB_RR_PERCENTAGE);

LEVERAGE_RATIO = 1 - (NAV/GAV);
SUB_RISK_RATIO = 1 - NAV/(RR_GAV);


//Debt Maturity Schedule
CURRENT_YEAR=CURRENT_YEAR*OWNERSHIP_PERCENTAGE;
YEARS_ELEVEN_PLUS=YEARS_ELEVEN_PLUS*OWNERSHIP_PERCENTAGE;


//***Leverage Analysis
//Current Lifecycle
CLASS CURRENT_LIFECYCLE_NEW;
SUM VALUE(NAME = GAV) SWIB_NAV(NAME = NAV);
LEVERAGE = 1-(NAV/GAV);


//Property Type
SUM VALUE(NAME = GAV) SWIB_NAV(NAME = NAV);
LEVERAGE = 1-(NAV/GAV);


//Asset Type
SUM VALUE(NAME = GAV) SWIB_NAV(NAME = NAV);
LEVERAGE = 1-(NAV/GAV);

RENAME=(CURRENT_LIFECYCLE_NEW=LABEL))
RENAME=(PROPERTY_TYPE_NEW=LABEL))
RENAME=(SCENARIO_TYPE_NAME=LABEL))


/*****************************Page 5**********************/
//Current Risk Profiles
IF RISKPROF = "VALUE" THEN
RISKPROF_REPORT = "Value";
ELSEIF RISKPROF = "CORE" THEN
RISKPROF_REPORT = "Core";
ELSEIF RISKPROF = "OPPOR" THEN
RISKPROF_REPORT = "Opportunistic";


//US/Non-US
CLASS US_NON_US;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Property Types
PROPERTY_TYPES;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Asset Types

ASSET_TYPE = "Structured Debt & Preferred Equity";
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Lifecycles
//Group Land and Development like in sample report
WHERE CURRENT_LIFECYCLE_NEW IN("Land","Development") 
SUM VALUE(NAME = VALUE);
WHERE (NOT (CURRENT_LIFECYCLE_NEW IN("Land","Development")))
SUM VALUE(NAME = VALUE);

CURRENT_LIFECYCLE_NEW = "Land/Development"
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Leverage Ratio
SUM LEVERAGE_RATIO_GAV(NAME=GAV) SWIB_ENDING_MARKET_VALUE_NAV2(NAME=NAV);
LEVERAGE_RATIO = (GAV-NAV)/GAV;


/*****************************Page 8**********************/
//Lifecycles Portfolio
CLASS CURRENT_LIFECYCLE_NEW COMPLETION_DATE;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;
COMPLETION_DATE_SERIAL = DATESERIAL(YEAR(COMPLETION_DATE),MONTH(COMPLETION_DATE),DAY(COMPLETION_DATE));


//Lifecycles Equity
CURRENT_LIFECYCLE_NEW COMPLETION_DATE;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;
COMPLETION_DATE_SERIAL = DATESERIAL(YEAR(COMPLETION_DATE),MONTH(COMPLETION_DATE),DAY(COMPLETION_DATE));


//Lifecycles Debt
CURRENT_LIFECYCLE_NEW
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


/*****************************Page 4**********************/
//Capital Structure Grouping
   CAPITAL_STRUCTURE_GROUPING = "Private Equity";
ELSEIF 
      INVESTMENT_STRUCTURE IN("Preferred Equity","First Mortgage","Junior Mortgage","Mezzanine","Non-Performing Loan(s)",
       "Participating Mortgage","Convertible Debt","Bank Loan / Private Placement","Tax-Exempt Bonds","Derivative") 
       OR INVESTMENT_STRUCTURE IS NULL) THEN
          CAPITAL_STRUCTURE_GROUPING = "Private Debt";
ELSEIF (SCENARIO_TYPE_INT = 1 AND PUBLIC_CO = "TRUE") THEN
   CAPITAL_STRUCTURE_GROUPING = "Public Equity";
ELSEIF SCENARIO_TYPE_INT = 2 AND INVESTMENT_STRUCTURE IN("CMBS - Investment Grade","CMBS - Below Inv. Grade","CMBS - Unrated","CRE CDO - Investment Grade","CRE CDO - Below Inv. Grade","REIT Bonds") 
THEN
   CAPITAL_STRUCTURE_GROUPING = "Public Debt";


//Fund/SA grouping
FUND_INVESTMENT_TYPE IN("Open-end Fund","Closed-end Fund") 
 ELSEIF FUND_INVESTMENT_TYPE IN("Separate Account","Joint Venture") THEN
   FUND_SA_GROUPING = "Separate Accounts";


//Capital Structure
CAPITAL_STRUCTURES;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Fund/SA
CLASS FUND_SA_GROUPING;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;


//Leverage ratios
IF RISKPROF = "VALUE" THEN
RISKPROF_REPORT = "Value";
ELSEIF RISKPROF = "CORE" THEN
RISKPROF_REPORT = "Core";
ELSEIF RISKPROF = "OPPOR" THEN
RISKPROF_REPORT = "Opportunistic";

SUM LEVERAGE_RATIO_GAV(NAME=GAV) SWIB_ENDING_MARKET_VALUE_NAV2(NAME=NAV);
LEVERAGE_RATIO = (GAV-NAV)/GAV;


//Land
CURRENT_LIFECYCLE_NEW;
SUM VALUE(NAME = VALUE);
PERCENTAGE_OF_TOTAL = VALUE/VALUE_SUM;
CURRENT_LIFECYCLE_NEW = "Land";
PERCENTAGE_OF_TOTAL = 0;

RENAME=(CAPITAL_STRUCTURE_GROUPING=LABEL))
RENAME=(FUND_SA_GROUPING=LABEL))
RENAME=(RISK_PROFILE=LABEL))
RENAME=(CURRENT_LIFECYCLE_NEW=LABEL))


/*****************************Pages 19,20,21**************/
//Page 19
TRADE_DATE BETWEEN(QUARTERENDDATE(%FIVE_YEARS+1)
SWIB_ENDING_MARKET_VALUE_NAV2 = INVESTMENT_VALUE2)) 
INCOME_EARNED2 = INCOME_EARNED_BEFORE_MANAGEMENT_FEE2 - ADVISORY_MANAGEMENT_FEE2;
INCOME_DISTRIBUTION2 = DISTRIBUTIONS_OF_INCOME2 + FEE_OFFSETS_INTEREST_CARRY_INCOME2;
APPRECIATION2 = APPRECIATION_BEFORE_PERFORMANCE_FEES2 - INCENTIVE_FEE2 - ACQUISITION_FEE2 - OTHER_FEE2;
NET_INVESTMENT_ACTIVITY2 = CONTRIBUTIONS2 - RETURN_OF_CAPITAL2 + INCOME_EARNED2 - INCOME_DISTRIBUTION2 + APPRECIATION2;
PROC SORT DATA = WORK.T_INCOME_STATEMENT_19 OUT = T_INCOME_STATEMENT_19;


//Page 20
FUND_TRANSACTIONS(WHERE OPTYPE_RAW = 5 AND TRADE_DATE BETWEEN(QUARTERENDDATE(%FIVE_YEARS+1),%ASOFDATE))
BY QUARTER_END_DATE_TRADE ORIGINAL_RISK_PROFILE;
INCOME_EARNED2 = INCOME_EARNED_BEFORE_MANAGEMENT_FEE2 - ADVISORY_MANAGEMENT_FEE2;
INCOME_DISTRIBUTION2 = DISTRIBUTIONS_OF_INCOME2 + FEE_OFFSETS_INTEREST_CARRY_INCOME2;
APPRECIATION2 = APPRECIATION_BEFORE_PERFORMANCE_FEES2 - INCENTIVE_FEE2 - ACQUISITION_FEE2 - OTHER_FEE2;
NET_INVESTMENT_ACTIVITY2 = CONTRIBUTIONS2 - RETURN_OF_CAPITAL2 + INCOME_EARNED2 - INCOME_DISTRIBUTION2 + APPRECIATION2;


//Page 21
T_FUND_TRANSACTIONS
RENAME = (SWIB_ENDING_MARKET_VALUE_NAV2 = INVESTMENT_VALUE2));
INCOME_EARNED2 = INCOME_EARNED_BEFORE_MANAGEMENT_FEE2 - ADVISORY_MANAGEMENT_FEE2;
INCOME_DISTRIBUTION2 = DISTRIBUTIONS_OF_INCOME2 + FEE_OFFSETS_INTEREST_CARRY_INCOME2;
APPRECIATION2 = APPRECIATION_BEFORE_PERFORMANCE_FEES2 - INCENTIVE_FEE2 - ACQUISITION_FEE2 - OTHER_FEE2;
NET_INVESTMENT_ACTIVITY2 = CONTRIBUTIONS2 - RETURN_OF_CAPITAL2 + INCOME_EARNED2 - INCOME_DISTRIBUTION2 + APPRECIATION2;


/*******************Page 6*************************************/
//Risk Profile by NAV

CLASS COMPLETION_DATE RISKPROF;
PERCENT_OF_TOTAL = SWIB_ENDING_MARKET_VALUE_NAV2/SWIB_ENDING_MARKET_VALUE_NAV2_SUM;


//Value/Opportunistic Exposure
//Unfunded commitments
REMAININGCOMMITMENT = COMMITMENT - (CAPITALCALLED_INSIDE+MANAGEMENTFEES_INSIDE+OTHERFEES_INSIDE) + REDRAWABLECAPITAL;
   RUNNING_REMAININGCOMMITMENT = LAG(RUNNING_REMAININGCOMMITMENT) + REMAININGCOMMITMENT;
LAST RUNNING_REMAININGCOMMITMENT(NAME = RUNNING_REMAININGCOMMITMENT) RUNNING_COMMITMENT(NAME = RUNNING_COMMITMENT);
PROC MEANS DATA = WORK.T_VALUE_OPPORTUNISTIC_EXPOSURE OUT = WORK.T_VALUE_OPPORTUNISTIC_EXPOSURE_GROUPING;
TOTAL_SUM = RUNNING_REMAININGCOMMITMENT+SWIB_ENDING_MARKET_VALUE_NAV2_BY_RISKPROF;
PERCENTAGE_OF_TOTAL_NAV =  SWIB_ENDING_MARKET_VALUE_NAV2/TOTAL_SUM;
PERCENTAGE_OF_TOTAL_REMAINING =  RUNNING_REMAININGCOMMITMENT/TOTAL_SUM;

/***********************************Consolidation of operations based on capital structure*************************/

/***********************************Consolidation of operations based on leverage classing*************************/

/***********************************Consolidation of operations based on property classing*************************/
//Sum by completion date
TOTAL_CONTRIBUTIONS(NAME = TOTAL_CONTRIBUTIONS)
TOTAL_DISTRIBUTIONS(NAME = TOTAL_DISTRIBUTIONS)



//Sum by completion date
SWIB_ENDING_MARKET_VALUE_NAV(NAME = SWIB_ENDING_MARKET_VALUE_NAV)
APPRECIATION_BEFORE_PERFORMANCE_FEES(NAME = APPRECIATION_BEFORE_PERFORMANCE_FEES)
INCENTIVE_FEE(NAME = INCENTIVE_FEE)
ACQUISITION_FEE(NAME = ACQUISITION_FEE)
DISPOSITION_FEE_VALUATION(NAME = DISPOSITION_FEE_VALUATION)
OTHER_FEE(NAME = OTHER_FEE)
INCOME_EARNED_BEFORE_MANAGEMENT_FEE(NAME = INCOME_EARNED_BEFORE_MANAGEMENT_FEE)
ADVISORY_MANAGEMENT_FEE(NAME = ADVISORY_MANAGEMENT_FEE)
TOTAL_CONTRIBUTIONS(NAME = TOTAL_CONTRIBUTIONS)
DISTRIBUTIONS_OF_INCOME(NAME = DISTRIBUTIONS_OF_INCOME)
RETURN_OF_CAPITAL_CAPITAL_GAIN(NAME = RETURN_OF_CAPITAL_CAPITAL_GAIN)


/**********************************Gross/Net IRR********************************/
//Gross
   IRR_CALC = TOTAL_DISTRIBUTIONS2 - TOTAL_CONTRIBUTIONS2;
   IRR_CALC = INCENTIVE_FEE2+ACQUISITION_FEE2+DISPOSITION_FEE_VALUATION2+OTHER_FEE2+ADVISORY_MANAGEMENT_FEE2;
   IRR_CALC = INCENTIVE_FEE2+ACQUISITION_FEE2+DISPOSITION_FEE_VALUATION2+OTHER_FEE2+ADVISORY_MANAGEMENT_FEE2+SWIB_ENDING_MARKET_VALUE_NAV2;


//Net
   IRR_CALC = TOTAL_DISTRIBUTIONS2 - TOTAL_CONTRIBUTIONS2;

ELSE
   IRR_CALC = SWIB_ENDING_MARKET_VALUE_NAV2;
   IRR IRR_CALC(NAME = NET_IRR DATE = COMPLETION_DATE);


/*************************Annual Cashflows Portfolio Level**************************************/
ANNUAL_CASHFLOWS_PORTFOLIO;
WHERE COMPLETION_DATE >= YEARBEGDATE(%FOUR_YEARS)); 
	SUM TOTAL_CONTRIBUTIONS2(NAME=CONTRIBUTIONS) DISTRIBUTIONS_OF_INCOME2(NAME = INCOME) RETURN_OF_CAPITAL_CAPITAL_GAIN2(NAME = RETURN_OF_CAPITAL);
	LAST SWIB_ENDING_MARKET_VALUE_NAV2(NAME = NAV);

CONTRIBUTIONS = -CONTRIBUTIONS;

COLUMN NET_CASH_FLOW TYPE = DOUBLE;
COLUMN CUMULATIVE_CONTRIBUTIONS TYPE = DOUBLE;
COLUMN CUMULATIVE_INCOME TYPE = DOUBLE;
COLUMN CUMULATIVE_ROC TYPE = DOUBLE;

NET_CASH_FLOW = CONTRIBUTIONS+INCOME+RETURN_OF_CAPITAL;

IF _N_ <> 1 THEN

   CUMULATIVE_CONTRIBUTIONS = LAG(CUMULATIVE_CONTRIBUTIONS) + CONTRIBUTIONS;
   CUMULATIVE_INCOME = LAG(CUMULATIVE_INCOME) + INCOME;
   CUMULATIVE_ROC = LAG(CUMULATIVE_ROC) + RETURN_OF_CAPITAL;

ELSE

   CUMULATIVE_CONTRIBUTIONS = CONTRIBUTIONS;
   CUMULATIVE_INCOME = INCOME;
   CUMULATIVE_ROC = RETURN_OF_CAPITAL;


IF CUMULATIVE_CONTRIBUTIONS <> 0 THEN
TVPI = (CUMULATIVE_ROC+CUMULATIVE_INCOME+NAV)/(-CUMULATIVE_CONTRIBUTIONS);


/*************************Annual Net Returns Fund level***********************************/
//****Benchmark Returns


//Data Recon
   IF REFERENCE_DATE = QUARTERENDDATE(LAG(REFERENCE_DATE)+1) THEN
      BENCHMARK_RETURN = (RATE-LAG(RATE))/LAG(RATE);
		REFERENCE_DATE_SERIAL = DATESERIAL(YEAR(REFERENCE_DATE),MONTH(REFERENCE_DATE),DAY(REFERENCE_DATE));


//Appreciation benchmark
//Income benchmark
//Gross benchmark
//Total benchmark
//Denominator for all returns
TOTAL_DISTRIBUTIONS2 = - TOTAL_DISTRIBUTIONS2;

DAY_COUNT = COMPLETION_DATE - (QUARTERBEGDATE(COMPLETION_DATE) - 1);
DAY_WEIGHTED_CONTRIBUTIONS = TOTAL_CONTRIBUTIONS2*DAY_COUNT;
DAY_WEIGHTED_DISTRIBUTIONS = TOTAL_DISTRIBUTIONS2*DAY_COUNT;

SUM TOTAL_CONTRIBUTIONS

PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;

IF CONTRIBUTIONS = 0 THEN
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


//Denominator will be used for all returns - REUSE!
DENOMINATOR = BEG_NAV + (WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS) + (WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS);



//Appreciation numerator
APP_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2 - INCENTIVE_FEE2 - ACQUISITION_FEE2 - DISPOSITION_FEE_VALUATION2 - OTHER_FEE2;


//Appreciation quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
	IF DENOMINATOR < 0 THEN
	IF APP_NUMERATOR > 0 THEN
	QUARTERLY_APPRECIATION_RETURN = 1;

      ELSE 
	QUARTERLY_APPRECIATION_RETURN = 0;

      ELSE
	QUARTERLY_APPRECIATION_RETURN = APP_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_APPRECIATION_RETURN = 0;

QUARTERLY_APPRECIATION_RETURN = QUARTERLY_APPRECIATION_RETURN+1;

IF QUARTERLY_APPRECIATION_RETURN < 0 THEN
   QUARTERLY_APPRECIATION_RETURN = 0.01;

IF QUARTER_YEAR = LAG(QUARTER_YEAR) AND FUND_IQID = LAG(FUND_IQID) THEN
	YEARLY_APPRECIATION_RETURN = LAG(YEARLY_APPRECIATION_RETURN) * QUARTERLY_APPRECIATION_RETURN;

ELSE
	YEARLY_APPRECIATION_RETURN = QUARTERLY_APPRECIATION_RETURN;

	YEARLY_APPRECIATION_RETURN = YEARLY_APPRECIATION_RETURN-1;


//Income numerator
INCOME_NUMERATOR = INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;

//Income quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
	IF DENOMINATOR < 0 THEN
	IF INCOME_NUMERATOR > 0 THEN
		QUARTERLY_INCOME_RETURN = 1;

      ELSE  
	QUARTERLY_INCOME_RETURN = 0;

   ELSE
	QUARTERLY_INCOME_RETURN = INCOME_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_INCOME_RETURN = 0;

QUARTERLY_INCOME_RETURN = QUARTERLY_INCOME_RETURN+1;

IF QUARTERLY_INCOME_RETURN < 0 THEN
   QUARTERLY_INCOME_RETURN = 0.01;

IF QUARTER_YEAR = LAG(QUARTER_YEAR) AND FUND_IQID = LAG(FUND_IQID) THEN
	YEARLY_INCOME_RETURN = LAG(YEARLY_INCOME_RETURN) * QUARTERLY_INCOME_RETURN;

ELSE
	YEARLY_INCOME_RETURN = QUARTERLY_INCOME_RETURN;

QUARTER_YEAR >= YEAR(%FOUR_YEARS));
YEARLY_INCOME_RETURN = YEARLY_INCOME_RETURN-1;


//Total numerator
TOTAL_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2-INCENTIVE_FEE2-ACQUISITION_FEE2-DISPOSITION_FEE_VALUATION2-OTHER_FEE2+INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;


//Total quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
IF DENOMINATOR < 0 THEN
IF TOTAL_NUMERATOR > 0 THEN
	QUARTERLY_TOTAL_RETURN = 1;

      ELSE 
	QUARTERLY_TOTAL_RETURN = 0;

   ELSE 
	QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_TOTAL_RETURN = 0;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;

IF QUARTER_YEAR = LAG(QUARTER_YEAR) AND FUND_IQID = LAG(FUND_IQID) THEN
	YEARLY_TOTAL_RETURN = LAG(YEARLY_TOTAL_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	YEARLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN;


/*************************Annual Net Returns Portfolio level***********************************/

//Denominator for all returns
TOTAL_DISTRIBUTIONS2 = - TOTAL_DISTRIBUTIONS2;

DAY_COUNT = COMPLETION_DATE - (QUARTERBEGDATE(COMPLETION_DATE) - 1);
DAY_WEIGHTED_CONTRIBUTIONS = TOTAL_CONTRIBUTIONS2*DAY_COUNT;
DAY_WEIGHTED_DISTRIBUTIONS = TOTAL_DISTRIBUTIONS2*DAY_COUNT;

PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;

IF CONTRIBUTIONS = 0 THEN
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);

IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
   WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


//Denominator will be used for all returns - REUSE!
IF QUARTER_END_DATE IS NULL THEN 
   QUARTER_END_DATE = QUARTERENDDATE(PREVIOUS_QUARTER_END_DATE+1);

DENOMINATOR = BEG_NAV + (WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS) + (WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS);


//Appreciation numerator
APP_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2 - INCENTIVE_FEE2 - ACQUISITION_FEE2 - DISPOSITION_FEE_VALUATION2 - OTHER_FEE2;

//Appreciation quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
	IF DENOMINATOR < 0 THEN
		IF APP_NUMERATOR > 0 THEN
			 QUARTERLY_APPRECIATION_RETURN = 1;

      ELSE 
	QUARTERLY_APPRECIATION_RETURN = 0;

   ELSE
	QUARTERLY_APPRECIATION_RETURN = APP_NUMERATOR/DENOMINATOR;

ELSE
	 QUARTERLY_APPRECIATION_RETURN = 0;

QUARTERLY_APPRECIATION_RETURN = QUARTERLY_APPRECIATION_RETURN+1;

IF QUARTERLY_APPRECIATION_RETURN < 0 THEN
   QUARTERLY_APPRECIATION_RETURN = 0.01;

IF QUARTER_YEAR = LAG(QUARTER_YEAR) THEN
	YEARLY_APPRECIATION_RETURN = LAG(YEARLY_APPRECIATION_RETURN) * QUARTERLY_APPRECIATION_RETURN;

ELSE
	YEARLY_APPRECIATION_RETURN = QUARTERLY_APPRECIATION_RETURN;


//Income numerator
INCOME_NUMERATOR = INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;


//Income quarter merge

IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
IF DENOMINATOR < 0 THEN
IF INCOME_NUMERATOR > 0 THEN
	QUARTERLY_INCOME_RETURN = 1;

      ELSE 
	QUARTERLY_INCOME_RETURN = 0;

   ELSE
	QUARTERLY_INCOME_RETURN = INCOME_NUMERATOR/DENOMINATOR;

ELSE
	 QUARTERLY_INCOME_RETURN = 0;
	
QUARTERLY_INCOME_RETURN = QUARTERLY_INCOME_RETURN+1;

IF QUARTERLY_INCOME_RETURN < 0 THEN
   QUARTERLY_INCOME_RETURN = 0.01;

YEARLY_INCOME_RETURN = LAG(YEARLY_INCOME_RETURN) * QUARTERLY_INCOME_RETURN;

ELSE
YEARLY_INCOME_RETURN = YEARLY_INCOME_RETURN-1;


//Total numerator
TOTAL_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2-INCENTIVE_FEE2-ACQUISITION_FEE2-DISPOSITION_FEE_VALUATION2-OTHER_FEE2+INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;

//Total quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
IF DENOMINATOR < 0 THEN
IF TOTAL_NUMERATOR > 0 THEN
	QUARTERLY_TOTAL_RETURN = 1;
	
ELSE 
	QUARTERLY_TOTAL_RETURN = 0;

ELSE
	 QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_TOTAL_RETURN = 0;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;

IF QUARTER_YEAR = LAG(QUARTER_YEAR) THEN
	YEARLY_TOTAL_RETURN = LAG(YEARLY_TOTAL_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	YEARLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN;

YEARLY_TOTAL_RETURN = YEARLY_TOTAL_RETURN-1;
QUARTER_END_DATE_MIN = QUARTERBEGDATE(QUARTER_END_DATE_MIN)-1;


TOTAL_BENCHMARK_RETURN = (END_TOTAL_RATE-BEGIN_TOTAL_RATE)/BEGIN_TOTAL_RATE;
APPRECIATION_BENCHMARK_RETURN = (END_APP_RATE-BEGIN_APP_RATE)/BEGIN_APP_RATE;
INCOME_BENCHMARK_RETURN = (END_INCOME_RATE-BEGIN_INCOME_RATE)/BEGIN_INCOME_RATE;


IF QUARTER_YEAR < YEAR(%ASOFDATE) THEN
LABEL = QUARTER_YEAR;
ELSE
LABEL = "YTD";


/*************************Net Returns Capital structure level***********************************/

//Denominator for all returns
TOTAL_DISTRIBUTIONS2 = - TOTAL_DISTRIBUTIONS2;

DAY_COUNT = COMPLETION_DATE - (QUARTERBEGDATE(COMPLETION_DATE) - 1);
DAY_WEIGHTED_CONTRIBUTIONS = TOTAL_CONTRIBUTIONS2*DAY_COUNT;
DAY_WEIGHTED_DISTRIBUTIONS = TOTAL_DISTRIBUTIONS2*DAY_COUNT;


PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;


IF CONTRIBUTIONS = 0 THEN
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);

IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


//Denominator will be used for all returns - REUSE!
IF QUARTER_END_DATE IS NULL THEN 
   QUARTER_END_DATE = QUARTERENDDATE(PREVIOUS_QUARTER_END_DATE+1);

DENOMINATOR = BEG_NAV + (WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS) + (WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS);


//Total numerator
TOTAL_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2-INCENTIVE_FEE2-ACQUISITION_FEE2-DISPOSITION_FEE_VALUATION2-OTHER_FEE2+INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;


//Total quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
IF DENOMINATOR < 0 THEN
IF TOTAL_NUMERATOR > 0 THEN
	QUARTERLY_TOTAL_RETURN = 1;

      ELSE 
	QUARTERLY_TOTAL_RETURN = 0;

   ELSE
	QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

ELSE
   QUARTERLY_TOTAL_RETURN = 0;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;


IF CAPITAL_STRUCTURE = LAG(CAPITAL_STRUCTURE) THEN
	FIVE_YEAR_RETURN = LAG(FIVE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	FIVE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;


IF CAPITAL_STRUCTURE = LAG(CAPITAL_STRUCTURE) THEN
	ONE_YEAR_RETURN = LAG(ONE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	ONE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;


QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN-1;
ONE_YEAR_RETURN = ONE_YEAR_RETURN-1;
FIVE_YEAR_RETURN = (FIVE_YEAR_RETURN^(1/5))-1;


/*************************Net Returns Leverage class level (Page 2)***********************************/

//Denominator for all returns

TOTAL_DISTRIBUTIONS2 = - TOTAL_DISTRIBUTIONS2;

DAY_COUNT = COMPLETION_DATE - (QUARTERBEGDATE(COMPLETION_DATE) - 1);
DAY_WEIGHTED_CONTRIBUTIONS = TOTAL_CONTRIBUTIONS2*DAY_COUNT;
DAY_WEIGHTED_DISTRIBUTIONS = TOTAL_DISTRIBUTIONS2*DAY_COUNT;


PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;
	IF CONTRIBUTIONS = 0 THEN
	 WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);

IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


//Denominator will be used for all returns - REUSE!
IF QUARTER_END_DATE IS NULL THEN 
   QUARTER_END_DATE = QUARTERENDDATE(PREVIOUS_QUARTER_END_DATE+1);


DENOMINATOR = BEG_NAV + (WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS) + (WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS);


//Total numerator
TOTAL_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2-INCENTIVE_FEE2-ACQUISITION_FEE2-DISPOSITION_FEE_VALUATION2-OTHER_FEE2+INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;

//Total quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
IF DENOMINATOR < 0 THEN
IF TOTAL_NUMERATOR > 0 THEN
	QUARTERLY_TOTAL_RETURN = 1;

      ELSE 
	 QUARTERLY_TOTAL_RETURN = 0;

   ELSE
	QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;
	
ELSE
	QUARTERLY_TOTAL_RETURN = 0;
	
	QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;


IF LEVERAGE_CLASS = LAG(LEVERAGE_CLASS) THEN

   FIVE_YEAR_RETURN = LAG(FIVE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	FIVE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;


IF LEVERAGE_CLASS = LAG(LEVERAGE_CLASS) THEN
	ONE_YEAR_RETURN = LAG(ONE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	 ONE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN-1;
ONE_YEAR_RETURN = ONE_YEAR_RETURN-1;
FIVE_YEAR_RETURN = (FIVE_YEAR_RETURN^(1/5))-1;


/*************************Net Returns property class level (Page 2)***********************************/

//Denominator for all returns
TOTAL_DISTRIBUTIONS2 = - TOTAL_DISTRIBUTIONS2;
PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;

IF CONTRIBUTIONS = 0 THEN
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);

IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


//Denominator will be used for all returns - REUSE!
DENOMINATOR = BEG_NAV + (WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS) + (WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS);


//Total numerator

TOTAL_NUMERATOR = APPRECIATION_BEFORE_PERFORMANCE_FEES2-INCENTIVE_FEE2-ACQUISITION_FEE2-DISPOSITION_FEE_VALUATION2-OTHER_FEE2+INCOME_EARNED_BEFORE_MANAGEMENT_FEE2-ADVISORY_MANAGEMENT_FEE2;


//Total quarter merge
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
 IF DENOMINATOR < 0 THEN
IF TOTAL_NUMERATOR > 0 THEN
	QUARTERLY_TOTAL_RETURN = 1;

      ELSE 
	 QUARTERLY_TOTAL_RETURN = 0;

   ELSE
	QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_TOTAL_RETURN = 0;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;

IF PROPERTY_TYPE_CLASS = LAG(PROPERTY_TYPE_CLASS) THEN

   FIVE_YEAR_RETURN = LAG(FIVE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	FIVE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;

IF PROPERTY_TYPE_CLASS = LAG(PROPERTY_TYPE_CLASS) THEN

   ONE_YEAR_RETURN = LAG(ONE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	ONE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN-1;
ONE_YEAR_RETURN = ONE_YEAR_RETURN-1;
FIVE_YEAR_RETURN = (FIVE_YEAR_RETURN^(1/5))-1;


/*************************Gross Returns (page 1)***********************************/

//Denominator for all returns

TOTAL_DISTRIBUTIONS2 = - (TOTAL_DISTRIBUTIONS2+ADVISORY_MANAGEMENT_FEE2+INCENTIVE_FEE2+ACQUISITION_FEE2+DISPOSITION_FEE_VALUATION2+OTHER_FEE2);

DAY_COUNT = COMPLETION_DATE - (QUARTERBEGDATE(COMPLETION_DATE) - 1);
DAY_WEIGHTED_CONTRIBUTIONS = TOTAL_CONTRIBUTIONS2*DAY_COUNT;
DAY_WEIGHTED_DISTRIBUTIONS = TOTAL_DISTRIBUTIONS2*DAY_COUNT;

PREVIOUS_QUARTER_END_DATE = QUARTERBEGDATE(QUARTER_END_DATE)-1;
IF CONTRIBUTIONS = 0 THEN
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_CONTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_CONTRIBUTIONS / CONTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);

IF DISTRIBUTIONS = 0 THEN
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE = 0;

ELSE
	WEIGHTED_DISTRIBUTIONS_PERCENTAGE =  ROUND(1 - DAY_WEIGHTED_DISTRIBUTIONS / DISTRIBUTIONS / (QUARTER_END_DATE - (QUARTERBEGDATE(QUARTER_END_DATE)-1)),5);


DENOMINATOR = BEGNAV+WEIGHTED_CONTRIBUTIONS_PERCENTAGE*CONTRIBUTIONS+WEIGHTED_DISTRIBUTIONS_PERCENTAGE*DISTRIBUTIONS;
TOTAL_NUMERATOR = ENDNAV-BEGNAV-CONTRIBUTIONS-DISTRIBUTIONS;

IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
   IF DENOMINATOR < 0 THEN
   IF TOTAL_NUMERATOR > 0 THEN
    QUARTERLY_GROSS_RETURN = 1;

      ELSE 
    QUARTERLY_GROSS_RETURN = 0;

   ELSE
	QUARTERLY_GROSS_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

ELSE
	QUARTERLY_GROSS_RETURN = 0;

QUARTERLY_GROSS_RETURN = QUARTERLY_GROSS_RETURN+1;

IF QUARTERLY_GROSS_RETURN < 0 THEN
   QUARTERLY_GROSS_RETURN = 0.01;


/***************Portfolio denominator averages (used for contribution to alpha)**********/

PROC SORT DATA = WORK.T_DENOMINATOR_PORTFOLIO(WHERE QUARTER_END_DATE <= %ASOFDATE AND QUARTER_END_DATE >= QUARTERENDDATE(%FIVE_YEARS+1)) OUT = WORK.T_CONTRIBUTION_TO_ALPHA;
BY QUARTER_END_DATE;
RUN;

PROC MEANS DATA =  WORK.T_CONTRIBUTION_TO_ALPHA OUT = WORK.T_FIVE_YEAR_DENOM_AVERAGE;
MEAN DENOMINATOR(NAME = PORTFOLIO_FIVE_YEAR_DENOM_AVERAGE);
RUN;

PROC MEANS DATA =  WORK.T_CONTRIBUTION_TO_ALPHA(WHERE QUARTER_END_DATE >= QUARTERENDDATE(%ONE_YEAR+1)) OUT = WORK.T_ONE_YEAR_DENOM_AVERAGE;
MEAN DENOMINATOR(NAME = PORTFOLIO_ONE_YEAR_DENOM_AVERAGE);
RUN;


/*****************************EVA****************************/
IF LAG(REFERENCE_DATE) = (QUARTERBEGDATE(REFERENCE_DATE) - 1) THEN
BENCHMARK_RETURN = (RATE - LAG(RATE)) / LAG(RATE);

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN-1;

EVA = (QUARTERLY_TOTAL_RETURN - BENCHMARK_RETURN) * DENOMINATOR;

//Per RISKPROF

/*************************Net Returns Risk Profile (blob) level (Page 2)***********************************/
IF DENOMINATOR <> 0 AND DENOMINATOR IS NOT NULL THEN
	IF DENOMINATOR < 0 THEN
	IF TOTAL_NUMERATOR > 0 THEN 

QUARTERLY_TOTAL_RETURN = 1;

      ELSE 
QUARTERLY_TOTAL_RETURN = 0;

   ELSE

   QUARTERLY_TOTAL_RETURN = TOTAL_NUMERATOR/DENOMINATOR;

   END;

ELSE

   QUARTERLY_TOTAL_RETURN = 0;


END;


QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN+1;

IF QUARTERLY_TOTAL_RETURN < 0 THEN
   QUARTERLY_TOTAL_RETURN = 0.01;

IF RISKPROF = LAG(RISKPROF) THEN
	FIVE_YEAR_RETURN = LAG(FIVE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
	FIVE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;
IF RISKPROF = LAG(RISKPROF) THEN

   ONE_YEAR_RETURN = LAG(ONE_YEAR_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE

   ONE_YEAR_RETURN = QUARTERLY_TOTAL_RETURN;

QUARTERLY_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN-1;
ONE_YEAR_RETURN = ONE_YEAR_RETURN-1;
FIVE_YEAR_RETURN = (FIVE_YEAR_RETURN^(1/5))-1;

///////////////////////
MERGE WORK.T_RISKPROF_INFO WORK.T_EVA_QUARTER_RISKPROF 

EVA_ANNUAL = EVA_ANNUAL/1000000;
EVA_QUARTER = EVA_QUARTER/1000000;
EVA_FIVE = EVA_FIVE/1000000;

CONTRIBUTION_TO_ALPHA_QUARTER = ((EVA_QUARTER*1000000)/PORTFOLIO_QUARTER_DENOMINATOR)*10000;
CONTRIBUTION_TO_ALPHA_ONE_YEAR = ((EVA_ANNUAL*1000000)/PORTFOLIO_ONE_YEAR_DENOM_AVERAGE)*10000;
CONTRIBUTION_TO_ALPHA_FIVE_YEAR = ((1+((EVA_FIVE*1000000)/PORTFOLIO_FIVE_YEAR_DENOM_AVERAGE))^(1/5)-1)*10000; 


/***********************************************************/
EVA_INCEPTION = EVA_INCEPTION/1000000;
EVA_ANNUAL = EVA_ANNUAL/1000000;
EVA_QUARTERLY = EVA_QUARTERLY/1000000;
EVA_FIVE = EVA_FIVE/1000000;

COLUMN CONTRIBUTION_TO_ALPHA_QUARTER TYPE = DOUBLE;
COLUMN CONTRIBUTION_TO_ALPHA_FIVE_YEAR TYPE = DOUBLE;
COLUMN CONTRIBUTION_TO_ALPHA_ONE_YEAR TYPE = DOUBLE;

CONTRIBUTION_TO_ALPHA_QUARTER = ((EVA_QUARTERLY*1000000)/PORTFOLIO_QUARTER_DENOMINATOR)*10000;
CONTRIBUTION_TO_ALPHA_ONE_YEAR = ((EVA_ANNUAL*1000000)/PORTFOLIO_ONE_YEAR_DENOM_AVERAGE)*10000;
CONTRIBUTION_TO_ALPHA_FIVE_YEAR = ((1+((EVA_FIVE*1000000)/PORTFOLIO_FIVE_YEAR_DENOM_AVERAGE))^(1/5)-1)*10000; 


//Descending


//Ascending

//Merge quarterly returns

QUARTERLY_TOTAL_RETURN=QUARTERLY_TOTAL_RETURN-1;

//Merge annual returns
ANNUAL_TOTAL_RETURN = LAG(ANNUAL_TOTAL_RETURN) * QUARTERLY_TOTAL_RETURN;

ELSE
ANNUAL_TOTAL_RETURN = QUARTERLY_TOTAL_RETURN;

ANNUAL_TOTAL_RETURN = ANNUAL_TOTAL_RETURN-1;


/******************************************************************************/

/*************************Subordination Risk Ratio******************************/


IF (TOTAL_GROSS_EXPOSURE+CASH_CASH_EQUIVALENTS) <> 0 THEN
SUBORDINATION_RISK_RATIO = (TOTAL_FINANCE_BMTM+DEBT_SENIOR_IN_CC_SUM)/(TOTAL_GROSS_EXPOSURE+CASH_CASH_EQUIVALENTS+DEBT_SENIOR_IN_CC_SUM);

IF RISKPROF = "VALUE" THEN
RISKPROF_REPORT = "Value";
ELSEIF RISKPROF = "CORE" THEN
RISKPROF_REPORT = "Core";
ELSEIF RISKPROF = "OPPOR" THEN
RISKPROF_REPORT = "Opportunistic";


/********************************************************Portfolio Net Returns****************************************/
IF _N_ = 1 THEN
NET_RETURN = QUARTERLY_TOTAL_RETURN;
ELSE
NET_RETURN = LAG(NET_RETURN)*QUARTERLY_TOTAL_RETURN;
END;
RUN;

PROC MEANS DATA = WORK.T_PORTFOLIO_LEVEL_NET_RETURNS_ONE_YEAR;
LAST NET_RETURN(NAME = PORTFOLIO_YEAR_NET_RETURN);
RUN;

DATA WORK.T_PORTFOLIO_LEVEL_NET_RETURNS_FIVE_YEAR;
SET WORK.T_PORTFOLIO_LEVEL_NET_RETURNS(KEEP = QUARTER_END_DATE QUARTERLY_TOTAL_RETURN);

COLUMN NET_RETURN TYPE = DOUBLE;

IF _N_ = 1 THEN
NET_RETURN = QUARTERLY_TOTAL_RETURN;
ELSE
NET_RETURN = LAG(NET_RETURN)*QUARTERLY_TOTAL_RETURN;
END;
RUN;

PROC MEANS DATA = WORK.T_PORTFOLIO_LEVEL_NET_RETURNS_FIVE_YEAR;
LAST NET_RETURN(NAME = PORTFOLIO_FIVE_YEAR_NET_RETURN);
RUN;

//Benchmarks
IF IN1 THEN BENCHMARK_TYPE = "Net";
ELSEIF IN2 THEN BENCHMARK_TYPE = "Gross";

/***********************************************************************************************************************/
//Notes
REMAININGCOMMITMENT_PORTFOLIO_DISPLAY = REMAININGCOMMITMENT_PORTFOLIO/1000000;
ADJUSTEDVALUATION_DISPLAY = ADJUSTEDVALUATION/1000000;
ADJUSTEDVALUATION_PORTFOLIO_DISPLAY = ADJUSTEDVALUATION_PORTFOLIO/1000000;

SWIB_ENDING_MARKET_VALUE_NAV2_DISPLAY = SWIB_ENDING_MARKET_VALUE_NAV2/1000000;
SWIB_ENDING_MARKET_VALUE_NAV2_PORTFOLIO_DISPLAY = SWIB_ENDING_MARKET_VALUE_NAV2_PORTFOLIO/1000000;

PORTFOLIO_QUARTER_NET_RETURN = PORTFOLIO_QUARTER_NET_RETURN-1;
PORTFOLIO_YEAR_NET_RETURN = PORTFOLIO_YEAR_NET_RETURN-1;
PORTFOLIO_FIVE_YEAR_NET_RETURN = (PORTFOLIO_FIVE_YEAR_NET_RETURN)^(1/5)-1;

PORTFOLIO_YEAR_GROSS_RETURN = PORTFOLIO_YEAR_GROSS_RETURN-1;
PORTFOLIO_FIVE_GROSS_RETURN = (PORTFOLIO_FIVE_GROSS_RETURN)^(1/5)-1;


/*************************************************************************************/

//Pages 12-17

%INCLUDE "P_12-17(test)";

//Page 9

%INCLUDE "P_PAGE9";

//Page 10

%INCLUDE "P_PAGE10";

//Page 11

%INCLUDE "P_PAGE11";






